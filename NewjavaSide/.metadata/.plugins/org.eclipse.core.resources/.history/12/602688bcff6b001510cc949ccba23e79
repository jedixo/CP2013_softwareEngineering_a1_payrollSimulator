package view;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

import controll.Database;
import controll.EmpList;
import controll.Employee;
import controll.TimeCardList;
import controll.Timecard;

@SuppressWarnings("serial")
public class AddTimeCard extends JDialog{
	
	private JTextField date;
	private JSpinner hours;
	private JComboBox<String> employees;
	private EmpList empList;
	//private TimeCardList tcList;

	

	public AddTimeCard(final TimeCardList tcList, final Database database, EmpList empList) {
		this.empList = empList;
		JPanel panel = new JPanel();
		panel.setLayout(new GridLayout(0,2,2,2));
		panel.add(new JLabel("Employee:"));
		employees = new JComboBox<>();
		for (Employee employee : empList) {
			String first = employee.getFirstName();
			String last = employee.getLastName();
			String name = first +" "+ last;
			employees.addItem(name);
		}
		panel.add(employees);
		panel.add(new JLabel("Date:"));
			//Date datenow = Calendar.getInstance().getTime();
			//SpinnerDateModel smb = new SpinnerDateModel(datenow, null, null, Calendar.HOUR_OF_DAY);
			//final JSpinner SPIN_DATE = new JSpinner();
			//SPIN_DATE .setModel(smb);
			//final JSpinner.DateEditor date = new JSpinner.DateEditor(SPIN_DATE, "YYYY-MM-dd");
			//SPIN_DATE.setEditor(date);
			//SPIN_DATE.setEnabled(false);
		
		Calendar cal = Calendar.getInstance();
		Date dte = cal.getTime();
		SimpleDateFormat format = new SimpleDateFormat("yyy-MM-dd");
		String dateString = null;
		try {
			dateString = format.format(dte);
			System.out.println(dte);
		}catch (Exception e) {
			System.out.println(e);
		}
		date = new JTextField();
		
		panel.add(date);
		panel.add(new JLabel("Hours:"));
		hours = new JSpinner();
		hours.setModel(new SpinnerNumberModel(0,0,24,0.5));
		panel.add(hours);
		JButton addButton = new JButton("Add");
		addButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				Timecard tc = new Timecard(((tcList.get(tcList.size()-1).getId() + 1)),getEmpId(),"2015-10-06",(float)((double)hours.getValue()));
				database.addTimeCard(tc);
				tcList.add(tc);
				close();
			
			}
		});
		JButton closeButton = new JButton("Cancel");
		closeButton.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				close();
				
			}
		});
		panel.add(addButton);
		panel.add(closeButton);
		setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		add(panel);
		setLocationRelativeTo(null);
		setPreferredSize(new Dimension(400, 300));
		setResizable(false);
		setTitle("Add Timecard");
		pack();
		setModal(true);
		setVisible(true);
	}
	
	private void close() {
		this.dispose();
		
	}
	
	private int getEmpId(){
		int id = 0;
		String[] nameStr = employees.getSelectedItem().toString().split("\\s+");
		for (Employee emp : empList) {
			if (emp.getFirstName().equals(nameStr[0]) && emp.getLastName().equals(nameStr[1])) {
				id = emp.getId();
			}
		}
		return id;
	
	}


}
